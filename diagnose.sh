#!/usr/bin/env bash

# Diagn√≥stico Completo del Sistema
# Este script ejecuta el diagn√≥stico completo E2E y muestra el resultado

# Colores para mejor legibilidad
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}=========================================================${NC}"
echo -e "${YELLOW}üîç DIAGN√ìSTICO COMPREHENSIVO E2E - IKU CABALACTIVA${NC}"
echo -e "${BLUE}=========================================================${NC}"
echo ""

# Verificar que estamos en la ra√≠z del proyecto
if [ ! -f "./package.json" ]; then
  echo -e "${RED}‚ùå Error: Este script debe ejecutarse desde la ra√≠z del proyecto${NC}"
  echo "   Actualmente en: $(pwd)"
  exit 1
fi

# Crear directorios necesarios
mkdir -p ./docs/diagnostics

# Generar .env.test si no existe
if [ ! -f "./.env" ] && [ ! -f "./.env.production" ] && [ ! -f "./.env.test" ]; then
  echo -e "${YELLOW}‚ö†Ô∏è No se encontr√≥ ning√∫n archivo de variables de entorno${NC}"
  echo -e "${BLUE}‚ÑπÔ∏è Generando archivo .env.test para diagn√≥stico...${NC}"
  node ./scripts/verify-env.js --generate-test
fi

# Ejecutar diagn√≥stico Python
echo -e "${YELLOW}üìã Ejecutando diagn√≥stico Python...${NC}"
python diagnose.py
PYTHON_STATUS=$?

# Ejecutar diagn√≥stico completo E2E
echo -e "${YELLOW}üìã Ejecutando diagn√≥stico completo E2E...${NC}"
node ./scripts/diagnose-comprehensive-e2e.js
E2E_STATUS=$?

# Ejecutar diagn√≥sticos adicionales
echo -e "\n${YELLOW}--- Diagn√≥stico adicional ---${NC}"

# Verificar configuraci√≥n CRM
if [ -f "src/services/crmService.js" ]; then
  echo -e "${GREEN}‚úÖ Servicio CRM configurado${NC}"
else
  echo -e "${RED}‚ùå Servicio CRM no encontrado${NC}"
  ADDITIONAL_STATUS=1
fi

# Verificar configuraciones de pago
if [ -f ".env" ] || [ -f ".env.production" ]; then
  echo -e "${GREEN}‚úÖ Configuraciones de entorno encontradas${NC}"
  
  # Verificar variables de entorno con el script existente
  if [ -f "scripts/verify-env.js" ]; then
    node scripts/verify-env.js
    ENV_STATUS=$?
  fi
else
  echo -e "${RED}‚ùå Configuraciones de entorno no encontradas${NC}"
  ADDITIONAL_STATUS=1
fi

# Verificar estado de pruebas
if [ -d "tests" ]; then
  echo -e "${GREEN}‚úÖ Pruebas configuradas${NC}"
else
  echo -e "${RED}‚ùå Pruebas no encontradas${NC}"
  ADDITIONAL_STATUS=1
fi

# Verificar estado del repositorio Git
if git rev-parse --git-dir > /dev/null 2>&1; then
  echo -e "${GREEN}‚úÖ Repositorio Git configurado${NC}"
  
  # Verificar cambios sin confirmar
  if [ -z "$(git status --porcelain)" ]; then
    echo -e "${GREEN}‚úÖ No hay cambios sin confirmar${NC}"
  else
    echo -e "${YELLOW}‚ö†Ô∏è Hay cambios sin confirmar${NC}"
  fi
else
  echo -e "${RED}‚ùå No es un repositorio Git${NC}"
  ADDITIONAL_STATUS=1
fi

# Verificar resultados del diagn√≥stico
if [ $E2E_STATUS -eq 0 ]; then
  echo ""
  echo -e "${GREEN}‚úÖ Diagn√≥stico E2E completado exitosamente${NC}"
  echo -e "${BLUE}‚ÑπÔ∏è Consulta el reporte en: docs/diagnostics/e2e-errors-analysis.md${NC}"
  echo -e "${BLUE}‚ÑπÔ∏è Resultados detallados en: docs/diagnostics/comprehensive-diagnosis.json${NC}"
  
  # Mostrar primeras l√≠neas del reporte
  if [ -f "./docs/diagnostics/e2e-errors-analysis.md" ]; then
    echo ""
    echo -e "${YELLOW}üìù Resumen del diagn√≥stico:${NC}"
    echo -e "${BLUE}-----------------------------------------${NC}"
    head -n 15 ./docs/diagnostics/e2e-errors-analysis.md
    echo "..."
    echo -e "${BLUE}-----------------------------------------${NC}"
    echo -e "${YELLOW}Ver el reporte completo para m√°s detalles${NC}"
  fi
else
  echo ""
  echo -e "${RED}‚ùå Error durante el diagn√≥stico E2E${NC}"
  echo "Revisa los mensajes de error anteriores"
fi

echo ""
echo -e "${BLUE}=========================================================${NC}"

# Estado final
if [ $PYTHON_STATUS -eq 0 ] && [ $E2E_STATUS -eq 0 ] && [ -z "$ADDITIONAL_STATUS" ]; then
  echo -e "${GREEN}‚úÖ DIAGN√ìSTICO COMPLETO: Sistema en buen estado.${NC}"
  echo -e "${BLUE}=========================================================${NC}"
  echo -e "${YELLOW}üèÅ FIN DEL DIAGN√ìSTICO${NC}"
  echo -e "${BLUE}=========================================================${NC}"
  exit 0
else
  echo -e "${YELLOW}‚ö†Ô∏è DIAGN√ìSTICO COMPLETO: Se encontraron problemas que requieren atenci√≥n.${NC}"
  echo -e "${BLUE}=========================================================${NC}"
  echo -e "${YELLOW}üèÅ FIN DEL DIAGN√ìSTICO${NC}"
  echo -e "${BLUE}=========================================================${NC}"
  exit 1
fi
