name: üöÄ CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: üß™ Test & Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm run test:ci
      
      - name: Run linting
        run: npm run lint
      
      - name: Security audit
        run: npm audit --audit-level=high
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3

  security:
    name: üîí Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

  build:
    name: üèóÔ∏è Build & Docker
    runs-on: ubuntu-latest
    needs: [test, security]
    outputs:
      image: ${{ steps.image.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        env:
          VITE_STRIPE_PUBLIC_KEY: ${{ secrets.VITE_STRIPE_PUBLIC_KEY }}
          VITE_PAYPAL_CLIENT_ID: ${{ secrets.VITE_PAYPAL_CLIENT_ID }}
          VITE_WHATSAPP_NUMBER: ${{ secrets.VITE_WHATSAPP_NUMBER }}
          VITE_SITE_URL: ${{ secrets.VITE_SITE_URL }}
          VITE_SPREADSHEET_ID: ${{ secrets.VITE_SPREADSHEET_ID }}
          VITE_EMAIL_ADMIN: ${{ secrets.VITE_EMAIL_ADMIN }}
          VITE_EMAIL_MAESTRO: ${{ secrets.VITE_EMAIL_MAESTRO }}
          VITE_EMAIL_CONTACTO: ${{ secrets.VITE_EMAIL_CONTACTO }}
          VITE_DEPLOYMENT_ID: ${{ secrets.VITE_DEPLOYMENT_ID }}
          VITE_WEB_APP_URL: ${{ secrets.VITE_WEB_APP_URL }}
          VITE_GOOGLE_CALENDAR_API_KEY: ${{ secrets.VITE_GOOGLE_CALENDAR_API_KEY }}
        run: npm run build
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Output image
        id: image
        run: echo "image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}" >> $GITHUB_OUTPUT

  deploy-staging:
    name: üöÄ Deploy Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop'
    environment: staging
    steps:
      - name: Deploy to staging
        run: echo "Deploy to staging with image ${{ needs.build.outputs.image }}"

  deploy-production:
    name: üåü Deploy Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build for production
        env:
          VITE_STRIPE_PUBLIC_KEY: ${{ secrets.VITE_STRIPE_PUBLIC_KEY }}
          VITE_PAYPAL_CLIENT_ID: ${{ secrets.VITE_PAYPAL_CLIENT_ID }}
          VITE_WHATSAPP_NUMBER: ${{ secrets.VITE_WHATSAPP_NUMBER }}
          VITE_SITE_URL: ${{ secrets.VITE_SITE_URL }}
          VITE_SPREADSHEET_ID: ${{ secrets.VITE_SPREADSHEET_ID }}
          VITE_EMAIL_ADMIN: ${{ secrets.VITE_EMAIL_ADMIN }}
          VITE_EMAIL_MAESTRO: ${{ secrets.VITE_EMAIL_MAESTRO }}
          VITE_EMAIL_CONTACTO: ${{ secrets.VITE_EMAIL_CONTACTO }}
          VITE_DEPLOYMENT_ID: ${{ secrets.VITE_DEPLOYMENT_ID }}
          VITE_WEB_APP_URL: ${{ secrets.VITE_WEB_APP_URL }}
          VITE_GOOGLE_CALENDAR_API_KEY: ${{ secrets.VITE_GOOGLE_CALENDAR_API_KEY }}
        run: npm run build
      
      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  monitor:
    name: üìä Monitor & Notify
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: always()
    steps:
      - name: Health check
        run: |
          curl -f https://iku-cabalactiva.com || exit 1
      
      - name: Notify success
        if: success()
        run: echo "‚úÖ Deployment successful!"
      
      - name: Notify failure
        if: failure()
        run: echo "‚ùå Deployment failed!"